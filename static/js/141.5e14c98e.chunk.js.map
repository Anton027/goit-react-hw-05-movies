{"version":3,"file":"static/js/141.5e14c98e.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx","services/Fetch.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;","import { HiArrowLeft } from \"react-icons/hi\";\nimport { StyledLink } from \"./BackLink.styled\"\n\nexport const BackLink = ({ to, children }) => {\n    return (\n        <StyledLink to={to}>\n            <HiArrowLeft size=\"24\" />\n            {children}\n        </StyledLink>\n    );\n};","import { BackLink } from \"components/BackLink/BackLink\";\nimport {  useLocation,useParams } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { IMAGE_URL, movieIdFetch } from \"services/Fetch\";\nimport { useState } from \"react\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState([])\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/movies\";\n\n    useEffect(() => {\n        movieIdFetch(movieId).then(movie => {\n            setMovie(movie);\n        })\n    }, [movieId])\n\n    const genres = movie.genres;\n\n    return (\n        \n        <main>\n            <div>\n                <BackLink to={backLinkHref}>\n                    back \n                </BackLink>\n                <div>\n                    <div>\n                        <h3>{movie.title}</h3>\n                        <img src={`${IMAGE_URL}${movie.poster_path}`} alt={movie.title} />\n                    </div>\n                    <div>\n                        <p>User Score: {Math.round(movie.vote_average * 10)} %</p>\n                        <h4>Overview</h4>\n                        <p>{movie.overview}</p>\n                        <h4>Genres:</h4>\n                        <p>{genres && genres.map(genre => genre.name).join(', ')}</p>\n                    </div>\n                </div>\n            </div>\n\n            <ul>\n                <li>\n                    <Link to=\"cast\" state={location.state}>Cast</Link>\n                </li>\n                <li>\n                    <Link to=\"review\" state={location.state}>Reviews</Link>\n                </li>\n            </ul>\n            <Suspense fallback={<div>Loading subpage...</div>}>\n                <Outlet />\n            </Suspense>\n        </main>\n    )\n}\nexport default MovieDetails;","\nconst axios = require('axios').default;\n\nconst KEY = \"ff98b74c6ada2972698b8eff6707845a\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\"\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w300'\nexport async function trendingMoviesFetch(page) {\n    try {\n        const response = await axios.get(`trending/all/day?api_key=${KEY}&page=${page}`);\n        const movies = await response.data.results;\n        return movies;\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function searchMovieFetch(movie, page) {\n    try {\n        const response = await axios.get(\n            `/search/movie?api_key=${KEY}&language=en-US&query=${movie}&page=${page}&include_adult=false`\n        );\n        const movies = await response.data.results;\n        return movies;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function movieIdFetch(movieId) {\n    try {\n        const response = await axios.get(\n            `/movie/${movieId}?api_key=${KEY}&language=en-US`\n        );\n        const movies = await response.data;\n        return movies;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function castFetch(movieId) {\n    try {\n        const response = await axios.get(\n            `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n        );\n        const movies = await response.data;\n        return movies;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function reviewFetch(movieId) {\n    try {\n        const response = await axios.get(\n            `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n        );\n        const movies = await response.data;\n        return movies;\n    } catch (error) {\n        console.log(error);\n    }\n}"],"names":["StyledLink","styled","Link","BackLink","to","children","size","useState","movie","setMovie","movieId","useParams","location","useLocation","backLinkHref","state","from","useEffect","movieIdFetch","then","genres","title","src","IMAGE_URL","poster_path","alt","Math","round","vote_average","overview","map","genre","name","join","Suspense","fallback","axios","require","KEY","defaults","baseURL","trendingMoviesFetch","page","get","response","data","results","movies","console","log","searchMovieFetch","castFetch","reviewFetch"],"sourceRoot":""}