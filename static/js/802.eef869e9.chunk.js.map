{"version":3,"file":"static/js/802.eef869e9.chunk.js","mappings":"kMA4BA,UAxBe,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,GAAYH,GAASI,MAAK,SAAAC,GACtBN,EAAUM,EAAKC,QAClB,GACJ,GAAE,CAACN,KAGA,2BACI,wBACKF,GAAUA,EAAOS,OAAS,EACtBT,EAAOU,KAAI,SAAAC,GAAM,OAClB,2BACI,oCAAYA,EAAOA,WACnB,uBAAIA,EAAOC,YAFND,EAAOE,GADE,KAIP,yCAI9B,C,gNCzBKC,EAAQC,EAAAA,MAAAA,QAERC,EAAM,mCACZF,EAAMG,SAASC,QAAU,gCAElB,IAAMC,EAAY,kCAElB,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,kGAEwBP,EAAMQ,IAAN,mCAAsCN,EAAtC,iBAAkDK,IAF1E,cAEOE,EAFP,gBAGsBA,EAAShB,KAAKC,QAHpC,cAGOgB,EAHP,yBAIQA,GAJR,6IAWA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAgCC,EAAOL,GAAvC,kGAEwBP,EAAMQ,IAAN,gCACMN,EADN,iCACkCU,EADlC,iBACgDL,EADhD,yBAFxB,cAEOE,EAFP,gBAKsBA,EAAShB,KAAKC,QALpC,cAKOgB,EALP,yBAMQA,GANR,6IAYA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BzB,GAA5B,kGAEwBY,EAAMQ,IAAN,iBACTpB,EADS,oBACUc,EADV,oBAFxB,cAEOO,EAFP,gBAKsBA,EAAShB,KAL/B,cAKOiB,EALP,yBAMQA,GANR,6IAYA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyB1B,GAAzB,kGAEwBY,EAAMQ,IAAN,iBACTpB,EADS,4BACkBc,EADlB,oBAFxB,cAEOO,EAFP,gBAKsBA,EAAShB,KAL/B,cAKOiB,EALP,yBAMQA,GANR,6IAYA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BH,GAA3B,kGAEwBY,EAAMQ,IAAN,iBACTpB,EADS,4BACkBc,EADlB,oBAFxB,cAEOO,EAFP,gBAKsBA,EAAShB,KAL/B,cAKOiB,EALP,yBAMQA,GANR,6I","sources":["components/Review/Review.jsx","services/Fetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport { reviewFetch } from \"services/Fetch\";\n\nconst Review = () => {\n    const [review, setReview] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        reviewFetch(movieId).then(data => {\n            setReview(data.results)\n        })\n    }, [movieId])\n    \n    return (\n        <main>\n            <ul>\n                {review && review.length > 0 ? \n                    (review.map(author => \n                    <li key={author.id}>\n                        <p>Author: {author.author}</p>\n                        <p>{author.content}</p>\n                    </li>)) : (<p> No review</p>)}\n            </ul>\n        </main>\n    )\n}\n\nexport default Review;","\nconst axios = require('axios').default;\n\nconst KEY = \"ff98b74c6ada2972698b8eff6707845a\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport async function trendingMoviesFetch(page) {\n    try {\n        const response = await axios.get(`trending/all/day?api_key=${KEY}&page=${page}`);\n        const movies = await response.data.results;\n        return movies;\n\n    } catch (error) {\n        return;\n    }\n}\n\nexport async function searchMovieFetch(movie, page) {\n    try {\n        const response = await axios.get(\n            `/search/movie?api_key=${KEY}&language=en-US&query=${movie}&page=${page}&include_adult=false`\n        );\n        const movies = await response.data.results;\n        return movies;\n    } catch (error) {\n        return;\n    }\n}\n\nexport async function movieIdFetch(movieId) {\n    try {\n        const response = await axios.get(\n            `/movie/${movieId}?api_key=${KEY}&language=en-US`\n        );\n        const movies = await response.data;\n        return movies;\n    } catch (error) {\n        return;\n    }\n}\n\nexport async function castFetch(movieId) {\n    try {\n        const response = await axios.get(\n            `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n        );\n        const movies = await response.data;\n        return movies;\n    } catch (error) {\n        return;\n    }\n}\n\nexport async function reviewFetch(movieId) {\n    try {\n        const response = await axios.get(\n            `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n        );\n        const movies = await response.data;\n        return movies;\n    } catch (error) {\n        return;\n    }\n}"],"names":["useState","review","setReview","movieId","useParams","useEffect","reviewFetch","then","data","results","length","map","author","content","id","axios","require","KEY","defaults","baseURL","IMAGE_URL","trendingMoviesFetch","page","get","response","movies","searchMovieFetch","movie","movieIdFetch","castFetch"],"sourceRoot":""}